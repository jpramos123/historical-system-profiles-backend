---

apiVersion: v1
kind: Template
metadata:
  name: historical-system-profiles
objects:

- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: historical-system-profiles
    labels:
      app: historical-system-profiles
  spec:
    envName: ${ENV_NAME}
    dependencies:
      - host-inventory
      - rbac
      - ingress
      - system-baseline
      - drift

    optionalDependencies:
      - notifications-backend
      - notifications-gw

    testing:
      iqePlugin: drift
    database:
      name: historical-system-profiles
      version: 12
    kafkaTopics:
      - topicName: platform.notifications.ingress
        partitions: 1
      - topicName: platform.payload-status
        partitions: 1

    deployments:
    - name: backend-service
      minReplicas: ${{MIN_REPLICAS}}
      webServices:
        public:
          enabled: true
      podSpec:
        imagePullPolicy: Always
        image: ${IMAGE}:${IMAGE_TAG}
        livenessProbe:
          httpGet:
            path: /mgmt/v0/status
            port: 8000
            initialDelaySeconds: 10
            periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /mgmt/v0/status
            port: 8000
            initialDelaySeconds: 10
            periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 512Mi
        volumes:
          - emptyDir: {}
            name: hsp-prometheus-data
        volumeMounts:
          - mountPath: /prometheus-data
            name: hsp-prometheus-data
        env:
          - name: APP_CONFIG
            value: gunicorn.conf.py
          - name: ENABLE_RBAC
            value: "${DRIFT_ENABLE_RBAC}"
          - name: ENABLE_SMART_MANGEMENT_ENTITLEMENT_CHECK
            value: "${ENABLE_SMART_MANGEMENT_ENTITLEMENT_CHECK}"
          - name: WEB_CONCURRENCY
            value: "4"
          - name: PATH_PREFIX
            value: /api/
          - name: APP_NAME
            value: historical-system-profiles
          - name: ENABLE_PIPENV
            value: 'true'
          - name: prometheus_multiproc_dir
            value: /prometheus-data
          - name: DRIFT_SHARED_SECRET
            valueFrom:
              secretKeyRef:
                key: shared-secret
                name: drift-interpod-comms

    - name: expired-cleaner-service
      minReplicas: ${{MIN_REPLICAS}}
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        resources:
          limits:
            cpu: 250m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 64Mi
        volumes:
          - emptyDir: {}
            name: historical-system-profiles-prometheus-data
        volumeMounts:
          - mountPath: /prometheus-data
            name: historical-system-profiles-prometheus-data
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        env:
          - name: APP_CONFIG
            value: gunicorn.conf.py
          - name: ENABLE_RBAC
            value: "${DRIFT_ENABLE_RBAC}"
          - name: ENABLE_SMART_MANGEMENT_ENTITLEMENT_CHECK
            value: "${ENABLE_SMART_MANGEMENT_ENTITLEMENT_CHECK}"
          - name: WEB_CONCURRENCY
            value: "4"
          - name: PATH_PREFIX
            value: /api/
          - name: APP_NAME
            value: hsp-expired-cleaner
          - name: SERVICE_MODE
            value: 'CLEAN_EXPIRED_RECORDS'
          - name: ENABLE_PIPENV
            value: 'true'
          - name: prometheus_multiproc_dir
            value: /prometheus-data
          - name: DRIFT_SHARED_SECRET
            valueFrom:
              secretKeyRef:
                key: shared-secret
                name: drift-interpod-comms

    - name: archiver-service
      minReplicas: ${{MIN_REPLICAS}}
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        resources:
          limits:
            cpu: 250m
            memory: 1Gi
          requests:
            cpu: 250m
            memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        volumes:
          - emptyDir: {}
            name: historical-system-profiles-prometheus-data
        volumeMounts:
          - mountPath: /prometheus-data
            name: historical-system-profiles-prometheus-data
        env:
          - name: APP_CONFIG
            value: gunicorn.conf.py
          - name: ENABLE_RBAC
            value: "${DRIFT_ENABLE_RBAC}"
          - name: ENABLE_SMART_MANGEMENT_ENTITLEMENT_CHECK
            value: "${ENABLE_SMART_MANGEMENT_ENTITLEMENT_CHECK}"
          - name: WEB_CONCURRENCY
            value: "4"
          - name: PATH_PREFIX
            value: /api/
          - name: APP_NAME
            value: hsp-archiver
          - name: SERVICE_MODE
            value: 'LISTENER'
          - name: LISTENER_TYPE
            value: 'ARCHIVER'
          - name: ENABLE_PIPENV
            value: 'true'
          - name: prometheus_multiproc_dir
            value: /prometheus-data
          - name: DRIFT_SHARED_SECRET
            valueFrom:
              secretKeyRef:
                key: shared-secret
                name: drift-interpod-comms
          - name: KAFKA_SECURITY_PROTOCOL
            value: ${KAFKA_SECURITY_PROTOCOL}
          - name: KAFKA_SASL_MECHANISM
            value: ${KAFKA_SASL_MECHANISM}

    - name: deleter-service
      minReplicas: ${{MIN_REPLICAS}}
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        resources:
          limits:
            cpu: 250m
            memory: 1Gi
          requests:
            cpu: 250m
            memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        volumes:
          - emptyDir: {}
            name: historical-system-profiles-prometheus-data
        volumeMounts:
          - mountPath: /prometheus-data
            name: historical-system-profiles-prometheus-data
        env:
          - name: APP_CONFIG
            value: gunicorn.conf.py
          - name: ENABLE_RBAC
            value: "${DRIFT_ENABLE_RBAC}"
          - name: ENABLE_SMART_MANGEMENT_ENTITLEMENT_CHECK
            value: "${ENABLE_SMART_MANGEMENT_ENTITLEMENT_CHECK}"
          - name: WEB_CONCURRENCY
            value: "4"
          - name: PATH_PREFIX
            value: /api/
          - name: APP_NAME
            value: hsp-deleter
          - name: SERVICE_MODE
            value: 'LISTENER'
          - name: LISTENER_TYPE
            value: 'DELETER'
          - name: ENABLE_PIPENV
            value: 'true'
          - name: prometheus_multiproc_dir
            value: /prometheus-data
          - name: DRIFT_SHARED_SECRET
            valueFrom:
              secretKeyRef:
                key: shared-secret
                name: drift-interpod-comms
          - name: KAFKA_SECURITY_PROTOCOL
            value: ${KAFKA_SECURITY_PROTOCOL}
          - name: KAFKA_SASL_MECHANISM
            value: ${KAFKA_SASL_MECHANISM}

- apiVersion: autoscaling/v1
  kind: HorizontalPodAutoscaler
  metadata:
    name: historical-system-profiles
    labels:
      app: historical-system-profiles
  spec:
    scaleTargetRef:
      apiVersion: v1
      kind: DeploymentConfig
      name: historical-system-profiles
    minReplicas: ${{MIN_REPLICAS}}
    maxReplicas: ${{MAX_REPLICAS}}
    targetCPUUtilizationPercentage: 50

parameters:
  - name: DRIFT_ENABLE_RBAC
    description: enable rbac. needs to be "True" or "False".
    value: "True"
  - name: ENABLE_SMART_MANGEMENT_ENTITLEMENT_CHECK
    description: enable the smart mgmt entitlement check on requests. Needs to be "True" or "False".
    value: "False"
  - name: IMAGE_TAG
    description: image tag to pull
    required: true
  - name: IMAGE
    description: image name
    value: quay.io/cloudservices/historical-system-profiles-backend
  - name: MIN_REPLICAS
    description: minimum pod replicas for horizontal pod autoscaler
    value: "1"
  - name: MAX_REPLICAS
    description: maximum pod replicas for horizontal pod autoscaler
    value: "1"
  - description: ClowdEnv Name
    name: ENV_NAME
  - name: CLOWDER_ENABLED
    value: "true"
  - name: SERVICE_MODE
  - name: LISTENER_TYPE
  - name: ENABLE_KAFKA_SSL
    value: "False"
  - name: KAFKA_SECURITY_PROTOCOL
    description: The Kafka Security Protocol
    value: PLAINTEXT
  - name: KAFKA_SASL_MECHANISM
    value: 'PLAIN'
